const TelegramBot = require('node-telegram-bot-api')
const fs = require('fs')
const token = '6351354525:AAFS87RsMexK91RBnOgl5WQvOMV6bLJFeGA'
const bot = new TelegramBot(token, {polling:
                                    {
                                    interval: 300,
                                    autoStart: true
                                    }})

// –°–µ—Ä–≤–µ—Ä–Ω–∞—è —á–∞—Å—Ç—å
const express = require('express')

const app = express()
let PORT = 3010

app.get('/', (req, res) => {
    res.send('Hello debug_Yourself')
})

app.listen(PORT, () => console.log(`My server is running on port ${PORT}`))

let htmlContentOriginal = 
`<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Thumbnail</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Belanosima:wght@400;600&family=EB+Garamond:wght@400;500;600&family=Lato:wght@100;300;400;700;900&family=Roboto:wght@100;300;400;500;700;900&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Belanosima:wght@400;600&family=EB+Garamond:wght@400;500;600&family=Josefin+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;1,200&family=Lato:wght@100;300;400;700;900&family=Roboto:wght@100;300;400;500;700;900&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Belanosima:wght@400;600&family=EB+Garamond:wght@400;500;600&family=Josefin+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;1,200&family=Lato:wght@100;300;400;700;900&family=M+PLUS+Rounded+1c:wght@100;300&family=Roboto:wght@100;300;400;500;700;900&display=swap" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Belanosima:wght@400;600&family=EB+Garamond:wght@400;500;600&family=Josefin+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;1,200&family=Lato:wght@100;300;400;700;900&family=M+PLUS+Rounded+1c:wght@100;300&family=Roboto:wght@500;700;900&display=swap" rel="stylesheet">
    <script src="/server.js"></script>
</head>
<style>
    body{
        margin:0%;
        display:flex;
        flex-direction: column;
        margin-bottom: 0px;
    }
    #top{
        display:flex;
        flex-direction: row;
        justify-content: space-between;
        padding-left:50px;
        height:100px;
        width:100%;
        background-color: rgb(231, 217, 199);
        color:rgb(126, 83, 63);
        font-family: 'Roboto', sans-serif;
        font-weight:200;
        font-size:36px;
        box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.336);
        box-sizing: border-box;
    }
    #contact-top{
        display:flex;
        height: 100%;
        width:50%;
        justify-content: center;
        align-items: center;
        font-size:26px;
        flex-wrap: wrap;
    }
    #main{
        display:flex;
        margin-left:10%;
        margin-right:10%;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content:center;
        width:100%;
    }
    #title{
        display:flex;
        height:100%;
        width:50%;
        align-items: center;
    }
    #main{
        display:flex;
        margin:0px;
        padding-top:40px;
        padding-bottom:40px;
        width:100%;
        box-sizing: border-box;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        background-color: rgb(248, 238, 221);
    }
    .pic{
        display:flex;
        width:600px;
        height:400px;
        margin-right:50px;
        margin-left: -50px;
    }
    #about{
        display:flex;
        width:550px;
        align-items: center;
        text-align: justify;
        flex-wrap: wrap;
        color:rgb(61, 44, 36);
        font-family: 'Roboto', sans-serif;
        font-weight:100;
        font-size:30px;
    }
    #contact-bottom{
        display:flex;
        flex-direction:column ;
        padding-top:15px;
        padding-bottom:15px;
        width:100%;
        justify-content:center;
        align-items: center;
        padding-left:50px;
        padding-right:50px;
        box-sizing: border-box;
        box-shadow: 0px -5px 10px rgba(94, 94, 94, 0.336);
        background-color: rgb(231, 217, 199);
    }
    .c{
        display:flex;
        margin:15px;
        font-family: 'Roboto', sans-serif;
        font-weight:100;
        font-size:24px;
        flex-wrap: wrap;
        width:40%;
        justify-content: center;
        text-align: center;
    }
    @media (min-width: 300px) and (max-width:800px) {
        #top{
        flex-direction: column;
        justify-content: space-around;
        padding-left:20px;
        height:160px;
        padding-bottom: 10px;
        width:100%;
        }  
        #contact-top{
            width:100%;
            box-sizing: border-box;
            padding-right:10px;
        } 
        #main{
            flex-direction: column;
            flex-wrap: nowrap;
            width:100%;
            align-items: center;
        }
        .pic{
            width:350px;
            display:flex;
            margin-left:50px;
        }
        img{
            width:100%;
        }
        #about{
            display: flex;
            flex-wrap: wrap;
            font-size: 24px;
            width:90%;
            margin-top:30px;          
        }
        .c{
            flex-wrap: wrap;
            width:100%;
            justify-content: center;
            text-align: center;
        }
    }
</style>
<body>
    <div id="top">
        <div id="title">[Your title]</div>
        <div id="contact-top">
            [–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ tg/vk/ig]
        </div>
    </div>
    <div id="main">
        <div class="pic" id="picture">
            <img src="https://i.pinimg.com/originals/c5/4c/3b/c54c3b22a044e74edd87094ea8084614.jpg">
        </div>
        <div id="about">
            –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –¥–µ–ª–∞ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ —Ö–æ—Ä–æ—à–µ–µ :)
        </div>
    </div>
    <div id="contact-bottom">
        <div class="c" id="address">
            [–ê–¥—Ä–µ—Å]
        </div>
        <div class="c" id="phone">
            [–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞]
        </div>
        <div class="c" id="other-information">
            [–∏–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã, –¥–æ—Å—Ç–∞–≤–∫–∞ –∏ —Ç.–¥.]
        </div>
    </div>
</body>
</html>`;

let htmlContent = htmlContentOriginal

const commands = [
    {
        command:'start',
        description:'–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞'
    },
    {
        command:'save',
        description:'–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç'
    },
    {
        command:'title',
        description:'–ó–∞–≥–æ–ª–æ–≤–æ–∫'
    },
    {
        command:'contact',
        description:'–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–≤–µ—Ä—Ö—É'
    },
    {
        command:'img',
        description:'–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
    },
    {
        command:'description',
        description:'–û–ø–∏—Å–∞–Ω–∏–µ —Ä—è–¥–æ–º —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π'
    },
    {
        command:'address',
        description:'–ê–¥—Ä–µ—Å'
    },
    {
        command:'phone',
        description:'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'
    },
    {
        command:'other',
        description:'–ò–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
    },
    {
        command:'adore',
        description:'–ø–æ—Ö–≤–∞–ª–∏—Ç—å)'
    }
]
bot.setMyCommands(commands)


// await bot.sendMessage(msg.chat.id, stroka, {parse_mode:'HTML'})

bot.onText(/\/adore/, async(msg) => {
    console.log(msg.chat.id)
    chatId = msg.from.id 
    try{
        await bot.sendMessage(msg.chat.id, '–¢—ã –º–æ–ª–æ–¥–µ—Ü:3')
    }
    catch(err){
        console.error()
    }
})

bot.onText(/\/start/, async msg => {
    try{
        await bot.sendPhoto(msg.chat.id, 'presentation-template.jpg',
        {
            caption:'–ü—Ä–∏–≤–µ—Ç, –≤–æ—Ç –ø—Ä–∏–º–µ—Ä —Ç–æ–≥–æ, —á—Ç–æ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å—Å—è, —Ç–µ–±–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —à–∞–±–ª–æ–Ω–Ω—ã–µ –ø–æ–ª—è ü´∂üèª'
        }
        )
    }
    catch(err){
        console.error()
    }
})

bot.onText(/\/title/, async msg => {
    try{
        await bot.sendMessage(msg.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:')
        bot.on('text', async msg =>{
            try{
                let userInput = msg.text
                htmlContent = htmlContent.replace(`[Your title]`, userInput)
                console.log('–ù–∞–∑–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!')
            }
            catch(err){
                console.error()
            }
        })
    }
    catch(err){
        console.error()
    }
})

bot.onText(/\/contact/, async msg => {
    try{
        await bot.sendMessage(msg.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, telegram, vk –∏–ª–∏ –¥—Ä—É–≥–∏–µ —Å–æ—Ü—Å–µ—Ç–∏:')
        bot.on('text', async msg =>{
            try{
                let userInput = msg.text
                htmlContent = htmlContent.replace(`[–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ tg/vk/ig]`, userInput)
                console.log( '–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!')
            }
            catch(err){
                console.error()
            }
        })
    }
    catch(err){
        console.error()
    }
})

bot.onText(/\/img/, async msg => {
    try{
        await bot.sendMessage(msg.chat.id, '–ü—Ä–∏—à–ª–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö, for example, –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –Ω–∞ –ø–∏–Ω—Ç–µ—Ä–µ—Å—Ç –∏–ª–∏ –≤ –≥—Ä—É–ø–ø–µ –≤–∫–æ–Ω—Ç–∞–∫—Ç–µ (–∏–ª–∏ –ø–æ-–¥—Ä—É–≥–æ–º—É, –Ω–æ –µ—Å–ª–∏ –¥–æ–ª–≥–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –ª—É—á—à–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É ü§∑‚Äç‚ôÄÔ∏è):')
        bot.on('text', async msg =>{
            try{
                let userInput = msg.text
                htmlContent = htmlContent.replace(`https://i.pinimg.com/originals/c5/4c/3b/c54c3b22a044e74edd87094ea8084614.jpg`, userInput)
                console.log('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!')
            }
            catch(err){
                console.error()
            }
        })
    }
    catch(err){
        console.error()
    }
})

bot.onText(/\/description/, async msg => {
    try{
        await bot.sendMessage(msg.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–µ–±–æ–ª—å—à–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≥–æ, –æ —á–µ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å:')
        bot.on('text', async msg =>{
            try{
                let userInput = msg.text
                htmlContent = htmlContent.replace(`–ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –¥–µ–ª–∞ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ —Ö–æ—Ä–æ—à–µ–µ :)`, userInput)
                console.log('–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!')
            }
            catch(err){
                console.error()
            }
        })
    }
    catch(err){
        console.error()
    }
})

bot.onText(/\/address/, async msg => {
    try{
        await bot.sendMessage(msg.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –∏–Ω—É—é –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ –≤–∞—à –≤–∫—É—Å:')
        bot.on('text', async msg =>{
            try{
                let userInput = msg.text
                htmlContent = htmlContent.replace(`[–ê–¥—Ä–µ—Å]`, userInput)
                console.log('–ê–¥—Ä–µ—Å –¥–æ–±–∞–≤–ª–µ–Ω!')
            }
            catch(err){
                console.error()
            }
        })
    }
    catch(err){
        console.error()
    }
})

bot.onText(/\/phone/, async msg => {
    try{
        await bot.sendMessage(msg.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ –∏–Ω—É—é –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ –≤–∞—à –≤–∫—É—Å:')
        bot.on('text', async msg =>{
            try{
                let userInput = msg.text
                htmlContent = htmlContent.replace(`[–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞]`, userInput)
                console.log('–ù–æ–º–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!')
            }
            catch(err){
                console.error()
            }
        })
    }
    catch(err){
        console.error()
    }
})

bot.onText(/\/other/, async msg => {
    try{
        await bot.sendMessage(msg.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∏–Ω—É—é –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ –≤–∞—à –≤–∫—É—Å (–ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –ø–æ–ª–µ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º):')
        bot.on('text', async msg =>{
            try{
                let userInput = msg.text
                htmlContent = htmlContent.replace(`[–∏–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä —á–∞—Å—ã —Ä–∞–±–æ—Ç—ã, –¥–æ—Å—Ç–∞–≤–∫–∞ –∏ —Ç.–¥.]`, userInput)
                console.log('–£—Å–ø–µ—à–Ω–æ!')
            }
            catch(err){
                console.error()
            }
        })
    }
    catch(err){
        console.error()
    }
})

bot.onText(/\/save/, async msg => {
    try{      
        fs.writeFile('result-page.html', htmlContent, (error) => { 
            try{
                throw new Error();
            } catch(e){
                console.error()
            }
        })
        try{
            await bot.sendDocument(msg.chat.id, 'result-page.html', {
                caption:'–û—Ç–ª–∏—á–Ω–æ, –≤–∞—à –ª–µ–Ω–¥–∏–Ω–≥ –≥–æ—Ç–æ–≤, –Ω–∞–¥–µ—é—Å—å, –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è! –í –±—É–¥—É—â–µ–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–π –ª–µ–Ω–¥–∏–Ω–≥, –∞ –º—ã –±—É–¥–µ–º —Å—Ç–∞—Ä–∞—Ç—å—Å—è –±—ã—Ç—å –ª—É—á—à–µ –¥–ª—è –≤–∞—Å ‚ú®'
            })
        }
        catch(err){
            console.error()
        }
        htmlContent = htmlContentOriginal
        try{
            await bot.sendMessage(msg.chat.id, '–î–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞üôèüèª')
        }
        catch(err){
            console.error()
        }
        bot.close()
    }
    catch(err){
        console.error()
    }
})